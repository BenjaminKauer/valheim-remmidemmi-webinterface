{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/conf.ts","./src/app/control.service.ts","./src/app/controls/controls.component.ts","./src/app/controls/controls.component.html","./src/app/interceptor.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    title = 'valheim-remmidemmi-ui';\n\n    constructor(public authService: AuthService) { }\n}\n","<mat-toolbar color=\"primary\">\n    <img src=\"assets/valheim_logo-image.png\" height=\"55\" id=\"logo\" />\n    <span>RemmiDemmi - Valheim Server</span>\n</mat-toolbar>\n\n<div class=\" content\" role=\"main\">\n\n    <app-login *ngIf=\"!(authService.isAuthenticated() | async); else controls\"></app-login>\n\n    <ng-template #controls>\n        <app-controls></app-controls>\n    </ng-template>\n\n</div>\n\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { LoginComponent } from './login/login.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { ControlsComponent } from './controls/controls.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { InterceptorService } from './interceptor.service';\n\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        LoginComponent,\n        ControlsComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        MatToolbarModule,\n        MatIconModule,\n        MatInputModule,\n        MatButtonModule,\n        MatGridListModule,\n        FormsModule,\n        HttpClientModule\n    ],\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: InterceptorService,\n            multi: true\n        }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Config } from './conf';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n\n    private password: string;\n    private authenticated = false;\n\n    constructor(private http: HttpClient) { }\n\n    isAuthenticated(): Observable<boolean> {\n        return of(this.authenticated);\n    }\n\n    getToken(): string {\n        if (this.password) {\n            return btoa(this.password);\n        }\n        return '';\n    }\n\n    login(password: string): void {\n\n        let headers: HttpHeaders = new HttpHeaders();\n        headers = headers.append('Authorization', btoa(password));\n\n        this.http.post(`${Config.BASE_URL}login`, {}, { headers })\n            .subscribe(() => {\n                this.password = password;\n                this.authenticated = true;\n            });\n    }\n}\n","\r\nconst BASE_URL = window.location.href;\r\n\r\n\r\nexport const Config = {\r\n    BASE_URL\r\n};\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Config } from './conf';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ControlService {\n\n    constructor(private http: HttpClient) { }\n\n    start(): void {\n        this.callApi('start');\n    }\n\n    stop(): void {\n        this.callApi('stop');\n    }\n\n    restart(): void {\n        this.callApi('restart');\n    }\n\n    private callApi(endpoint: string): void {\n        this.http.post(`${Config.BASE_URL}${endpoint}`, {})\n            .subscribe(() => {\n            });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlService } from '../control.service';\n\n\n@Component({\n    selector: 'app-controls',\n    templateUrl: './controls.component.html',\n    styleUrls: ['./controls.component.scss']\n})\nexport class ControlsComponent implements OnInit {\n\n    constructor(private ctrlService: ControlService) { }\n\n    ngOnInit(): void {\n    }\n\n    start(): void {\n        this.ctrlService.start();\n    }\n    stop(): void {\n        this.ctrlService.stop();\n    }\n    restart(): void {\n        this.ctrlService.restart();\n    }\n\n}\n","<button mat-raised-button color=\"accent\" (click)=\"start()\">Start</button>\n<button mat-raised-button color=\"warn\" (click)=\"stop()\">Stop</button>\n<button mat-raised-button color=\"primary\" (click)=\"restart()\">Restart</button>","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { Config } from './conf';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class InterceptorService implements HttpInterceptor {\n\n    constructor(private auth: AuthService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        // Do not intercept Login route\n        if (request.url === `${Config.BASE_URL}login`) {\n            return next.handle(request);\n        }\n\n        console.log(request);\n        const authHeaderValue: string = this.auth.getToken();\n\n        request = request.clone({\n            setHeaders: {\n                Authorization: authHeaderValue\n            }\n        });\n        return next.handle(request);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n    public password: string = '';\n\n    constructor(public authService: AuthService) { }\n\n    ngOnInit(): void {\n    }\n\n    login(): void {\n        this.authService.login(this.password);\n    }\n\n}\n","<form class=\"example-form\">\n    <mat-form-field>\n        <mat-label>Passwort</mat-label>\n        <input matInput placeholder=\"\" type=\"password\" [(ngModel)]=\"password\" name=\"pass\">\n    </mat-form-field>\n</form>\n<button mat-raised-button color=\"primary\" (click)=\"login()\">Login</button>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}